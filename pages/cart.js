import Head from 'next/head';
import { useRouter } from 'next/router';
import React, { useState } from 'react';
import NumberFormat from 'react-number-format';
import { useDispatch, useSelector } from 'react-redux';
import Header from '../components/Header';
import {
  addItemToCart,
  removeItemFromCart,
  removeItemFromCartCompletely,
} from '../store/cartSlice';

function Cart() {
  const router = useRouter();
  const cartItem = useSelector((state) => state.cart.item.cartItems);
  const dispatch = useDispatch();
  const handleAdjustUp = (product) => {
    dispatch(addItemToCart(product));
  };
  const handleAdjustDown = (product) => {
    dispatch(removeItemFromCart(product.id));
  };
  const handleRemoveCompletely = (product) => {
    dispatch(removeItemFromCartCompletely(product.id));
  };
  return (
    <div>
      <Head>
        <title>Your Cart</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <Header />
      <img
        src="https://m.media-amazon.com/images/I/6111I6ptvHL._SX3000_.jpg"
        alt=""
        className="h-[300px] w-full object-contain"
      />
      <div className=" bg-gray-100   mt-2">
        <div className="  border min-h-[400px] px-10 py-5 mx-10">
          <h1 className="font-semibold text-3xl border-b-2 pb-5">
            Your shopping cart
          </h1>
          <div className="mt-5">
            {cartItem.length == 0 ? (
              'No Product'
            ) : (
              <div className="">
                {cartItem.map((item) => {
                  return (
                    <div
                      className=" border my-2 py-2 px-2 flex justify-between items-center gap-2"
                      key={item.id}
                    >
                      <div className="text-md flex-[0.5]">
                        {item.productName.slice(0, 20) + '...'}
                      </div>
                      <div>
                        <img
                          src={item.image}
                          className="rounded-lg w-7 h-7"
                          alt=""
                        />
                      </div>
                      <div className="text-semibold gap-2 flex-1 justify-center  items-center flex">
                        <div
                          className="bg-amber-500 cursor-pointer"
                          onClick={() => handleAdjustUp(item)}
                        >
                          <svg
                            xmlns="http://www.w3.org/2000/svg"
                            className="h-6 w-6"
                            fill="none"
                            viewBox="0 0 24 24"
                            stroke="currentColor"
                            strokeWidth={2}
                          >
                            <path
                              strokeLinecap="round"
                              strokeLinejoin="round"
                              d="M5 15l7-7 7 7"
                            />
                          </svg>
                        </div>
                        <div className="border w-6 h-6 flex items-center justify-center">
                          {item.quantity}
                        </div>
                        <div
                          className="bg-gray-200 cursor-pointer"
                          onClick={() => handleAdjustDown(item)}
                        >
                          <svg
                            xmlns="http://www.w3.org/2000/svg"
                            className="h-6 w-6"
                            fill="none"
                            viewBox="0 0 24 24"
                            stroke="currentColor"
                            strokeWidth={2}
                          >
                            <path
                              strokeLinecap="round"
                              strokeLinejoin="round"
                              d="M19 9l-7 7-7-7"
                            />
                          </svg>
                        </div>
                      </div>
                      <div className="flex-[0.2]">
                        {' '}
                        <NumberFormat
                          className="text-md foo font-semibold"
                          value={item.totalPrice.toFixed(2)}
                          displayType={'text'}
                          thousandSeparator={true}
                          prefix={'$'}
                          renderText={(value, props) => (
                            <div {...props}>{value}</div>
                          )}
                        />
                      </div>
                      <div
                        className="bg-red-500 cursor-pointer rounded-full text-white"
                        onClick={() => handleRemoveCompletely(item)}
                      >
                        <svg
                          xmlns="http://www.w3.org/2000/svg"
                          className="h-6 w-6"
                          fill="none"
                          viewBox="0 0 24 24"
                          stroke="currentColor"
                          strokeWidth={2}
                        >
                          <path
                            strokeLinecap="round"
                            strokeLinejoin="round"
                            d="M6 18L18 6M6 6l12 12"
                          />
                        </svg>
                      </div>
                    </div>
                  );
                })}
              </div>
            )}
          </div>{' '}
          <div className="   rounded-md border px-10 py-10 mx-10">
            <h1 className="font-semibold text-3xl">Checkout</h1>
            <div className="flex items-center gap-5  mt-5">
              <span>Total Amount: </span>
              <NumberFormat
                className="text-md foo font-semibold"
                value={cartItem
                  .reduce((prev, curr) => prev + curr.totalPrice, 0)
                  .toFixed(2)}
                displayType={'text'}
                thousandSeparator={true}
                prefix={'$'}
                renderText={(value, props) => <div {...props}>{value}</div>}
              />
            </div>
            <div className="flex py-5 gap-2 items-center">
              <h1>Promote Code:</h1>
              <input
                type="text"
                name=""
                className="py-2 outline-none px-4 rounded-md text-gray-600"
                id=""
                placeholder="Promote Code..."
              />
            </div>
            <div
              onClick={() => router.push('/checkout')}
              className="bg-amber-400 py-2 px-3 text-center rounded-md cursor-pointer w-[20%]"
            >
              <button>Proceed to Checkout</button>
            </div>
          </div>
        </div>
      </div>
    </div>
  );
}

export default Cart;
